using UnityEngine;
using System.Collections;

public class SwipeControl : MonoBehaviour
{

	public float moveSpeed;
	public float jumpForce;

	public float maxTime;
	public float minSwipeDist;

	float startTime;
	float endTime;

	Vector3 startPos;
	Vector3 endPos;
	float swipeDistance;
	float swipeTime;

	private Rigidbody2D rb;


	void Start ()
	{

		rb = GetComponent<Rigidbody2D> ();
	
		if (Input.touchCount > 0) {

			Touch touch = Input.GetTouch (0);

			if (touch.phase == TouchPhase.Began) {
				
				startTime = Time.time;
				startPos = touch.position;

			} else if (touch.phase == TouchPhase.Ended) {

				endTime = Time.time;
				endPos = touch.position;

				swipeDistance = (endPos - startPos).magnitude;
				swipeTime = endTime - startTime;

				if (swipeTime < maxTime && swipeDistance > minSwipeDist) {

					swipe ();

				}

			}

		}

	}


	void swipe ()
	{
		

		Vector2 distance = endPos - startPos;

		if (Mathf.Abs (distance.x) > Mathf.Abs (distance.y)) {

			///Debug.Log ("Horizontal Swipe");

			if (distance.x > 0) {

				rb.velocity = new Vector2 (moveSpeed, rb.velocity.y);
				//Debug.Log ("Right Swipe");

			} 

			if (distance.x < 0) {

				rb.velocity = new Vector2 (-moveSpeed, rb.velocity.y);
				//Debug.Log ("Left Swipe");

			} 


		} else if (Mathf.Abs (distance.x) < Mathf.Abs (distance.y)) {

			//Debug.Log ("Vertical Swipe");

			if (distance.y > 0) {

				rb.velocity = new Vector2 (rb.velocity.x, jumpForce);
				//Debug.Log ("Up Swipe");

			} 

			if (distance.y < 0) {

				//Debug.Log ("Down Swipe");

			} 


		}


	}


}
